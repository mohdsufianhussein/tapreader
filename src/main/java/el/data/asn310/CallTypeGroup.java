
package el.data.asn310;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "CallTypeGroup" )
    public class CallTypeGroup implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "CallTypeGroup" , isSet = false )
       public static class CallTypeGroupSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "callTypeLevel1", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private CallTypeLevel1 callTypeLevel1 = null;
                
  
        @ASN1Element ( name = "callTypeLevel2", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private CallTypeLevel2 callTypeLevel2 = null;
                
  
        @ASN1Element ( name = "callTypeLevel3", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private CallTypeLevel3 callTypeLevel3 = null;
                
  
        @ASN1Element ( name = "calledCountryCode", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private CalledCountryCode calledCountryCode = null;
                
  
        
        public CallTypeLevel1 getCallTypeLevel1 () {
            return this.callTypeLevel1;
        }

        
        public boolean isCallTypeLevel1Present () {
            return this.callTypeLevel1 != null;
        }
        

        public void setCallTypeLevel1 (CallTypeLevel1 value) {
            this.callTypeLevel1 = value;
        }
        
  
        
        public CallTypeLevel2 getCallTypeLevel2 () {
            return this.callTypeLevel2;
        }

        
        public boolean isCallTypeLevel2Present () {
            return this.callTypeLevel2 != null;
        }
        

        public void setCallTypeLevel2 (CallTypeLevel2 value) {
            this.callTypeLevel2 = value;
        }
        
  
        
        public CallTypeLevel3 getCallTypeLevel3 () {
            return this.callTypeLevel3;
        }

        
        public boolean isCallTypeLevel3Present () {
            return this.callTypeLevel3 != null;
        }
        

        public void setCallTypeLevel3 (CallTypeLevel3 value) {
            this.callTypeLevel3 = value;
        }
        
  
        
        public CalledCountryCode getCalledCountryCode () {
            return this.calledCountryCode;
        }

        
        public boolean isCalledCountryCodePresent () {
            return this.calledCountryCode != null;
        }
        

        public void setCalledCountryCode (CalledCountryCode value) {
            this.calledCountryCode = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_CallTypeGroupSequenceType;
        }

       private static IASN1PreparedElementData preparedData_CallTypeGroupSequenceType = CoderFactory.getInstance().newPreparedElementData(CallTypeGroupSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "CallTypeGroup", isOptional =  false , hasTag =  true, tag = 258, 
        tagClass =  TagClass.Application  , hasDefaultValue =  false  )
    
        private CallTypeGroupSequenceType  value;        

        
        
        public CallTypeGroup () {
        }
        
        
        
        public void setValue(CallTypeGroupSequenceType value) {
            this.value = value;
        }
        
        
        
        public CallTypeGroupSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(CallTypeGroup.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            