
package el.data.asn310;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "EquipmentInformation" )
    public class EquipmentInformation implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "EquipmentInformation" , isSet = false )
       public static class EquipmentInformationSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "mobileStationClassMark", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private MobileStationClassMark mobileStationClassMark = null;
                
  
        @ASN1Element ( name = "imeiOrEsn", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ImeiOrEsn imeiOrEsn = null;
                
  
        
        public MobileStationClassMark getMobileStationClassMark () {
            return this.mobileStationClassMark;
        }

        
        public boolean isMobileStationClassMarkPresent () {
            return this.mobileStationClassMark != null;
        }
        

        public void setMobileStationClassMark (MobileStationClassMark value) {
            this.mobileStationClassMark = value;
        }
        
  
        
        public ImeiOrEsn getImeiOrEsn () {
            return this.imeiOrEsn;
        }

        
        public boolean isImeiOrEsnPresent () {
            return this.imeiOrEsn != null;
        }
        

        public void setImeiOrEsn (ImeiOrEsn value) {
            this.imeiOrEsn = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_EquipmentInformationSequenceType;
        }

       private static IASN1PreparedElementData preparedData_EquipmentInformationSequenceType = CoderFactory.getInstance().newPreparedElementData(EquipmentInformationSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "EquipmentInformation", isOptional =  false , hasTag =  true, tag = 102, 
        tagClass =  TagClass.Application  , hasDefaultValue =  false  )
    
        private EquipmentInformationSequenceType  value;        

        
        
        public EquipmentInformation () {
        }
        
        
        
        public void setValue(EquipmentInformationSequenceType value) {
            this.value = value;
        }
        
        
        
        public EquipmentInformationSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(EquipmentInformation.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            