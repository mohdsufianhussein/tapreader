
package el.data.asn310;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "UMTSQoSInformation", isSet = false )
    public class UMTSQoSInformation implements IASN1PreparedElement {
            
        @ASN1Element ( name = "trafficClass", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private QoSTrafficClass trafficClass = null;
                
  
        @ASN1Element ( name = "maxBitRateUplink", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private QoSMaxBitRateUplink maxBitRateUplink = null;
                
  
        @ASN1Element ( name = "maxBitRateDownlink", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private QoSMaxBitRateDownlink maxBitRateDownlink = null;
                
  
        @ASN1Element ( name = "qoSGuaranteedBitRateDownlink", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private QoSGuaranteedBitRateDownlink qoSGuaranteedBitRateDownlink = null;
                
  
        @ASN1Element ( name = "qoSGuaranteedBitRateUplink", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private QoSGuaranteedBitRateUplink qoSGuaranteedBitRateUplink = null;
                
  
        @ASN1Element ( name = "allocRetenPriority", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private QoSAllocRetenPriority allocRetenPriority = null;
                
  
        
        public QoSTrafficClass getTrafficClass () {
            return this.trafficClass;
        }

        
        public boolean isTrafficClassPresent () {
            return this.trafficClass != null;
        }
        

        public void setTrafficClass (QoSTrafficClass value) {
            this.trafficClass = value;
        }
        
  
        
        public QoSMaxBitRateUplink getMaxBitRateUplink () {
            return this.maxBitRateUplink;
        }

        
        public boolean isMaxBitRateUplinkPresent () {
            return this.maxBitRateUplink != null;
        }
        

        public void setMaxBitRateUplink (QoSMaxBitRateUplink value) {
            this.maxBitRateUplink = value;
        }
        
  
        
        public QoSMaxBitRateDownlink getMaxBitRateDownlink () {
            return this.maxBitRateDownlink;
        }

        
        public boolean isMaxBitRateDownlinkPresent () {
            return this.maxBitRateDownlink != null;
        }
        

        public void setMaxBitRateDownlink (QoSMaxBitRateDownlink value) {
            this.maxBitRateDownlink = value;
        }
        
  
        
        public QoSGuaranteedBitRateDownlink getQoSGuaranteedBitRateDownlink () {
            return this.qoSGuaranteedBitRateDownlink;
        }

        
        public boolean isQoSGuaranteedBitRateDownlinkPresent () {
            return this.qoSGuaranteedBitRateDownlink != null;
        }
        

        public void setQoSGuaranteedBitRateDownlink (QoSGuaranteedBitRateDownlink value) {
            this.qoSGuaranteedBitRateDownlink = value;
        }
        
  
        
        public QoSGuaranteedBitRateUplink getQoSGuaranteedBitRateUplink () {
            return this.qoSGuaranteedBitRateUplink;
        }

        
        public boolean isQoSGuaranteedBitRateUplinkPresent () {
            return this.qoSGuaranteedBitRateUplink != null;
        }
        

        public void setQoSGuaranteedBitRateUplink (QoSGuaranteedBitRateUplink value) {
            this.qoSGuaranteedBitRateUplink = value;
        }
        
  
        
        public QoSAllocRetenPriority getAllocRetenPriority () {
            return this.allocRetenPriority;
        }

        
        public boolean isAllocRetenPriorityPresent () {
            return this.allocRetenPriority != null;
        }
        

        public void setAllocRetenPriority (QoSAllocRetenPriority value) {
            this.allocRetenPriority = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(UMTSQoSInformation.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            