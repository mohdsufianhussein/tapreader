
package el.data.asn310;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "TaxInformation" )
    public class TaxInformation implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "TaxInformation" , isSet = false )
       public static class TaxInformationSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "taxCode", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private TaxCode taxCode = null;
                
  
        @ASN1Element ( name = "taxValue", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private TaxValue taxValue = null;
                
  
        @ASN1Element ( name = "chargeType", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ChargeType chargeType = null;
                
  
        @ASN1Element ( name = "taxableAmount", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private TaxableAmount taxableAmount = null;
                
  
        
        public TaxCode getTaxCode () {
            return this.taxCode;
        }

        
        public boolean isTaxCodePresent () {
            return this.taxCode != null;
        }
        

        public void setTaxCode (TaxCode value) {
            this.taxCode = value;
        }
        
  
        
        public TaxValue getTaxValue () {
            return this.taxValue;
        }

        
        public boolean isTaxValuePresent () {
            return this.taxValue != null;
        }
        

        public void setTaxValue (TaxValue value) {
            this.taxValue = value;
        }
        
  
        
        public ChargeType getChargeType () {
            return this.chargeType;
        }

        
        public boolean isChargeTypePresent () {
            return this.chargeType != null;
        }
        

        public void setChargeType (ChargeType value) {
            this.chargeType = value;
        }
        
  
        
        public TaxableAmount getTaxableAmount () {
            return this.taxableAmount;
        }

        
        public boolean isTaxableAmountPresent () {
            return this.taxableAmount != null;
        }
        

        public void setTaxableAmount (TaxableAmount value) {
            this.taxableAmount = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_TaxInformationSequenceType;
        }

       private static IASN1PreparedElementData preparedData_TaxInformationSequenceType = CoderFactory.getInstance().newPreparedElementData(TaxInformationSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "TaxInformation", isOptional =  false , hasTag =  true, tag = 213, 
        tagClass =  TagClass.Application  , hasDefaultValue =  false  )
    
        private TaxInformationSequenceType  value;        

        
        
        public TaxInformation () {
        }
        
        
        
        public void setValue(TaxInformationSequenceType value) {
            this.value = value;
        }
        
        
        
        public TaxInformationSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(TaxInformation.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            