
package el.data.asn310;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "NetworkLocation" )
    public class NetworkLocation implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "NetworkLocation" , isSet = false )
       public static class NetworkLocationSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "recEntityCode", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private RecEntityCode recEntityCode = null;
                
  
        @ASN1Element ( name = "callReference", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private CallReference callReference = null;
                
  
        @ASN1Element ( name = "locationArea", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private LocationArea locationArea = null;
                
  
        @ASN1Element ( name = "cellId", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private CellId cellId = null;
                
  
        
        public RecEntityCode getRecEntityCode () {
            return this.recEntityCode;
        }

        
        public boolean isRecEntityCodePresent () {
            return this.recEntityCode != null;
        }
        

        public void setRecEntityCode (RecEntityCode value) {
            this.recEntityCode = value;
        }
        
  
        
        public CallReference getCallReference () {
            return this.callReference;
        }

        
        public boolean isCallReferencePresent () {
            return this.callReference != null;
        }
        

        public void setCallReference (CallReference value) {
            this.callReference = value;
        }
        
  
        
        public LocationArea getLocationArea () {
            return this.locationArea;
        }

        
        public boolean isLocationAreaPresent () {
            return this.locationArea != null;
        }
        

        public void setLocationArea (LocationArea value) {
            this.locationArea = value;
        }
        
  
        
        public CellId getCellId () {
            return this.cellId;
        }

        
        public boolean isCellIdPresent () {
            return this.cellId != null;
        }
        

        public void setCellId (CellId value) {
            this.cellId = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_NetworkLocationSequenceType;
        }

       private static IASN1PreparedElementData preparedData_NetworkLocationSequenceType = CoderFactory.getInstance().newPreparedElementData(NetworkLocationSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "NetworkLocation", isOptional =  false , hasTag =  true, tag = 156, 
        tagClass =  TagClass.Application  , hasDefaultValue =  false  )
    
        private NetworkLocationSequenceType  value;        

        
        
        public NetworkLocation () {
        }
        
        
        
        public void setValue(NetworkLocationSequenceType value) {
            this.value = value;
        }
        
        
        
        public NetworkLocationSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(NetworkLocation.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            