
package el.data.asn311;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "DiscountApplied" )
    public class DiscountApplied implements IASN1PreparedElement {
                
        
        
    @ASN1PreparedElement
    @ASN1Choice ( name = "DiscountApplied" )
    public static class DiscountAppliedChoiceType implements IASN1PreparedElement {
            
        @ASN1Element ( name = "fixedDiscountValue", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private FixedDiscountValue fixedDiscountValue = null;
                
  
        @ASN1Element ( name = "discountRate", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private DiscountRate discountRate = null;
                
  
        
        public FixedDiscountValue getFixedDiscountValue () {
            return this.fixedDiscountValue;
        }

        public boolean isFixedDiscountValueSelected () {
            return this.fixedDiscountValue != null;
        }

        private void setFixedDiscountValue (FixedDiscountValue value) {
            this.fixedDiscountValue = value;
        }

        
        public void selectFixedDiscountValue (FixedDiscountValue value) {
            this.fixedDiscountValue = value;
            
                    setDiscountRate(null);
                            
        }

        
  
        
        public DiscountRate getDiscountRate () {
            return this.discountRate;
        }

        public boolean isDiscountRateSelected () {
            return this.discountRate != null;
        }

        private void setDiscountRate (DiscountRate value) {
            this.discountRate = value;
        }

        
        public void selectDiscountRate (DiscountRate value) {
            this.discountRate = value;
            
                    setFixedDiscountValue(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_DiscountAppliedChoiceType;
        }

        private static IASN1PreparedElementData preparedData_DiscountAppliedChoiceType = CoderFactory.getInstance().newPreparedElementData(DiscountAppliedChoiceType.class);

    }

                
        @ASN1Element ( name = "DiscountApplied", isOptional =  false , hasTag =  true, tag = 428, 
        tagClass =  TagClass.Application  , hasDefaultValue =  false  )
    
        private DiscountAppliedChoiceType  value;        

        
        
        public DiscountApplied () {
        }
        
        
        
        public void setValue(DiscountAppliedChoiceType value) {
            this.value = value;
        }
        
        
        
        public DiscountAppliedChoiceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(DiscountApplied.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            