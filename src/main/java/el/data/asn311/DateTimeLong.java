
package el.data.asn311;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "DateTimeLong", isSet = false )
    public class DateTimeLong implements IASN1PreparedElement {
            
        @ASN1Element ( name = "localTimeStamp", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private LocalTimeStamp localTimeStamp = null;
                
  
        @ASN1Element ( name = "utcTimeOffset", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private UtcTimeOffset utcTimeOffset = null;
                
  
        
        public LocalTimeStamp getLocalTimeStamp () {
            return this.localTimeStamp;
        }

        
        public boolean isLocalTimeStampPresent () {
            return this.localTimeStamp != null;
        }
        

        public void setLocalTimeStamp (LocalTimeStamp value) {
            this.localTimeStamp = value;
        }
        
  
        
        public UtcTimeOffset getUtcTimeOffset () {
            return this.utcTimeOffset;
        }

        
        public boolean isUtcTimeOffsetPresent () {
            return this.utcTimeOffset != null;
        }
        

        public void setUtcTimeOffset (UtcTimeOffset value) {
            this.utcTimeOffset = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(DateTimeLong.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            