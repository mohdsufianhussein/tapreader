
package el.data.asn311;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "DataInterChange" )
    public class DataInterChange implements IASN1PreparedElement {
            
        @ASN1Element ( name = "transferBatch", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private TransferBatch transferBatch = null;
                
  
        @ASN1Element ( name = "notification", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Notification notification = null;
                
  
        
        public TransferBatch getTransferBatch () {
            return this.transferBatch;
        }

        public boolean isTransferBatchSelected () {
            return this.transferBatch != null;
        }

        private void setTransferBatch (TransferBatch value) {
            this.transferBatch = value;
        }

        
        public void selectTransferBatch (TransferBatch value) {
            this.transferBatch = value;
            
                    setNotification(null);
                            
        }

        
  
        
        public Notification getNotification () {
            return this.notification;
        }

        public boolean isNotificationSelected () {
            return this.notification != null;
        }

        private void setNotification (Notification value) {
            this.notification = value;
        }

        
        public void selectNotification (Notification value) {
            this.notification = value;
            
                    setTransferBatch(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(DataInterChange.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            