
package el.data.asn311;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "GeographicalLocation" )
    public class GeographicalLocation implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "GeographicalLocation" , isSet = false )
       public static class GeographicalLocationSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "servingNetwork", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ServingNetwork servingNetwork = null;
                
  
        @ASN1Element ( name = "servingBid", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ServingBid servingBid = null;
                
  
        @ASN1Element ( name = "servingLocationDescription", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ServingLocationDescription servingLocationDescription = null;
                
  
        
        public ServingNetwork getServingNetwork () {
            return this.servingNetwork;
        }

        
        public boolean isServingNetworkPresent () {
            return this.servingNetwork != null;
        }
        

        public void setServingNetwork (ServingNetwork value) {
            this.servingNetwork = value;
        }
        
  
        
        public ServingBid getServingBid () {
            return this.servingBid;
        }

        
        public boolean isServingBidPresent () {
            return this.servingBid != null;
        }
        

        public void setServingBid (ServingBid value) {
            this.servingBid = value;
        }
        
  
        
        public ServingLocationDescription getServingLocationDescription () {
            return this.servingLocationDescription;
        }

        
        public boolean isServingLocationDescriptionPresent () {
            return this.servingLocationDescription != null;
        }
        

        public void setServingLocationDescription (ServingLocationDescription value) {
            this.servingLocationDescription = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_GeographicalLocationSequenceType;
        }

       private static IASN1PreparedElementData preparedData_GeographicalLocationSequenceType = CoderFactory.getInstance().newPreparedElementData(GeographicalLocationSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "GeographicalLocation", isOptional =  false , hasTag =  true, tag = 113, 
        tagClass =  TagClass.Application  , hasDefaultValue =  false  )
    
        private GeographicalLocationSequenceType  value;        

        
        
        public GeographicalLocation () {
        }
        
        
        
        public void setValue(GeographicalLocationSequenceType value) {
            this.value = value;
        }
        
        
        
        public GeographicalLocationSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(GeographicalLocation.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            