
package el.data.asn311;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "Discounting" )
    public class Discounting implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "Discounting" , isSet = false )
       public static class DiscountingSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "discountCode", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private DiscountCode discountCode = null;
                
  
        @ASN1Element ( name = "discountApplied", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private DiscountApplied discountApplied = null;
                
  
        
        public DiscountCode getDiscountCode () {
            return this.discountCode;
        }

        
        public boolean isDiscountCodePresent () {
            return this.discountCode != null;
        }
        

        public void setDiscountCode (DiscountCode value) {
            this.discountCode = value;
        }
        
  
        
        public DiscountApplied getDiscountApplied () {
            return this.discountApplied;
        }

        
        public boolean isDiscountAppliedPresent () {
            return this.discountApplied != null;
        }
        

        public void setDiscountApplied (DiscountApplied value) {
            this.discountApplied = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_DiscountingSequenceType;
        }

       private static IASN1PreparedElementData preparedData_DiscountingSequenceType = CoderFactory.getInstance().newPreparedElementData(DiscountingSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "Discounting", isOptional =  false , hasTag =  true, tag = 94, 
        tagClass =  TagClass.Application  , hasDefaultValue =  false  )
    
        private DiscountingSequenceType  value;        

        
        
        public Discounting () {
        }
        
        
        
        public void setValue(DiscountingSequenceType value) {
            this.value = value;
        }
        
        
        
        public DiscountingSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(Discounting.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            