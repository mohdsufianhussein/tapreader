
package el.data.asn311;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "ContentTransaction" )
    public class ContentTransaction implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "ContentTransaction" , isSet = false )
       public static class ContentTransactionSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "contentTransactionBasicInfo", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ContentTransactionBasicInfo contentTransactionBasicInfo = null;
                
  
        @ASN1Element ( name = "chargedPartyInformation", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ChargedPartyInformation chargedPartyInformation = null;
                
  
        @ASN1Element ( name = "servingPartiesInformation", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ServingPartiesInformation servingPartiesInformation = null;
                
  
        @ASN1Element ( name = "contentServiceUsed", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ContentServiceUsedList contentServiceUsed = null;
                
  
        @ASN1Element ( name = "operatorSpecInformation", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private OperatorSpecInfoList operatorSpecInformation = null;
                
  
        
        public ContentTransactionBasicInfo getContentTransactionBasicInfo () {
            return this.contentTransactionBasicInfo;
        }

        
        public boolean isContentTransactionBasicInfoPresent () {
            return this.contentTransactionBasicInfo != null;
        }
        

        public void setContentTransactionBasicInfo (ContentTransactionBasicInfo value) {
            this.contentTransactionBasicInfo = value;
        }
        
  
        
        public ChargedPartyInformation getChargedPartyInformation () {
            return this.chargedPartyInformation;
        }

        
        public boolean isChargedPartyInformationPresent () {
            return this.chargedPartyInformation != null;
        }
        

        public void setChargedPartyInformation (ChargedPartyInformation value) {
            this.chargedPartyInformation = value;
        }
        
  
        
        public ServingPartiesInformation getServingPartiesInformation () {
            return this.servingPartiesInformation;
        }

        
        public boolean isServingPartiesInformationPresent () {
            return this.servingPartiesInformation != null;
        }
        

        public void setServingPartiesInformation (ServingPartiesInformation value) {
            this.servingPartiesInformation = value;
        }
        
  
        
        public ContentServiceUsedList getContentServiceUsed () {
            return this.contentServiceUsed;
        }

        
        public boolean isContentServiceUsedPresent () {
            return this.contentServiceUsed != null;
        }
        

        public void setContentServiceUsed (ContentServiceUsedList value) {
            this.contentServiceUsed = value;
        }
        
  
        
        public OperatorSpecInfoList getOperatorSpecInformation () {
            return this.operatorSpecInformation;
        }

        
        public boolean isOperatorSpecInformationPresent () {
            return this.operatorSpecInformation != null;
        }
        

        public void setOperatorSpecInformation (OperatorSpecInfoList value) {
            this.operatorSpecInformation = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_ContentTransactionSequenceType;
        }

       private static IASN1PreparedElementData preparedData_ContentTransactionSequenceType = CoderFactory.getInstance().newPreparedElementData(ContentTransactionSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "ContentTransaction", isOptional =  false , hasTag =  true, tag = 17, 
        tagClass =  TagClass.Application  , hasDefaultValue =  false  )
    
        private ContentTransactionSequenceType  value;        

        
        
        public ContentTransaction () {
        }
        
        
        
        public void setValue(ContentTransactionSequenceType value) {
            this.value = value;
        }
        
        
        
        public ContentTransactionSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ContentTransaction.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            