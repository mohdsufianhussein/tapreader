
package el.data.asn312;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "AccountingInfo" )
    public class AccountingInfo implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "AccountingInfo" , isSet = false )
       public static class AccountingInfoSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "taxation", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private TaxationList taxation = null;
                
  
        @ASN1Element ( name = "discounting", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private DiscountingList discounting = null;
                
  
        @ASN1Element ( name = "localCurrency", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private LocalCurrency localCurrency = null;
                
  
        @ASN1Element ( name = "tapCurrency", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private TapCurrency tapCurrency = null;
                
  
        @ASN1Element ( name = "currencyConversionInfo", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private CurrencyConversionList currencyConversionInfo = null;
                
  
        @ASN1Element ( name = "tapDecimalPlaces", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private TapDecimalPlaces tapDecimalPlaces = null;
                
  
        
        public TaxationList getTaxation () {
            return this.taxation;
        }

        
        public boolean isTaxationPresent () {
            return this.taxation != null;
        }
        

        public void setTaxation (TaxationList value) {
            this.taxation = value;
        }
        
  
        
        public DiscountingList getDiscounting () {
            return this.discounting;
        }

        
        public boolean isDiscountingPresent () {
            return this.discounting != null;
        }
        

        public void setDiscounting (DiscountingList value) {
            this.discounting = value;
        }
        
  
        
        public LocalCurrency getLocalCurrency () {
            return this.localCurrency;
        }

        
        public boolean isLocalCurrencyPresent () {
            return this.localCurrency != null;
        }
        

        public void setLocalCurrency (LocalCurrency value) {
            this.localCurrency = value;
        }
        
  
        
        public TapCurrency getTapCurrency () {
            return this.tapCurrency;
        }

        
        public boolean isTapCurrencyPresent () {
            return this.tapCurrency != null;
        }
        

        public void setTapCurrency (TapCurrency value) {
            this.tapCurrency = value;
        }
        
  
        
        public CurrencyConversionList getCurrencyConversionInfo () {
            return this.currencyConversionInfo;
        }

        
        public boolean isCurrencyConversionInfoPresent () {
            return this.currencyConversionInfo != null;
        }
        

        public void setCurrencyConversionInfo (CurrencyConversionList value) {
            this.currencyConversionInfo = value;
        }
        
  
        
        public TapDecimalPlaces getTapDecimalPlaces () {
            return this.tapDecimalPlaces;
        }

        
        public boolean isTapDecimalPlacesPresent () {
            return this.tapDecimalPlaces != null;
        }
        

        public void setTapDecimalPlaces (TapDecimalPlaces value) {
            this.tapDecimalPlaces = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_AccountingInfoSequenceType;
        }

       private static IASN1PreparedElementData preparedData_AccountingInfoSequenceType = CoderFactory.getInstance().newPreparedElementData(AccountingInfoSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "AccountingInfo", isOptional =  false , hasTag =  true, tag = 5, 
        tagClass =  TagClass.Application  , hasDefaultValue =  false  )
    
        private AccountingInfoSequenceType  value;        

        
        
        public AccountingInfo () {
        }
        
        
        
        public void setValue(AccountingInfoSequenceType value) {
            this.value = value;
        }
        
        
        
        public AccountingInfoSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(AccountingInfo.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            