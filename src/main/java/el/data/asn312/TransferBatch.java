
package el.data.asn312;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "TransferBatch" )
    public class TransferBatch implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "TransferBatch" , isSet = false )
       public static class TransferBatchSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "batchControlInfo", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private BatchControlInfo batchControlInfo = null;
                
  
        @ASN1Element ( name = "accountingInfo", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private AccountingInfo accountingInfo = null;
                
  
        @ASN1Element ( name = "networkInfo", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private NetworkInfo networkInfo = null;
                
  
        @ASN1Element ( name = "messageDescriptionInfo", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private MessageDescriptionInfoList messageDescriptionInfo = null;
                
  
        @ASN1Element ( name = "callEventDetails", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private CallEventDetailList callEventDetails = null;
                
  
        @ASN1Element ( name = "auditControlInfo", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private AuditControlInfo auditControlInfo = null;
                
  
        
        public BatchControlInfo getBatchControlInfo () {
            return this.batchControlInfo;
        }

        
        public boolean isBatchControlInfoPresent () {
            return this.batchControlInfo != null;
        }
        

        public void setBatchControlInfo (BatchControlInfo value) {
            this.batchControlInfo = value;
        }
        
  
        
        public AccountingInfo getAccountingInfo () {
            return this.accountingInfo;
        }

        
        public boolean isAccountingInfoPresent () {
            return this.accountingInfo != null;
        }
        

        public void setAccountingInfo (AccountingInfo value) {
            this.accountingInfo = value;
        }
        
  
        
        public NetworkInfo getNetworkInfo () {
            return this.networkInfo;
        }

        
        public boolean isNetworkInfoPresent () {
            return this.networkInfo != null;
        }
        

        public void setNetworkInfo (NetworkInfo value) {
            this.networkInfo = value;
        }
        
  
        
        public MessageDescriptionInfoList getMessageDescriptionInfo () {
            return this.messageDescriptionInfo;
        }

        
        public boolean isMessageDescriptionInfoPresent () {
            return this.messageDescriptionInfo != null;
        }
        

        public void setMessageDescriptionInfo (MessageDescriptionInfoList value) {
            this.messageDescriptionInfo = value;
        }
        
  
        
        public CallEventDetailList getCallEventDetails () {
            return this.callEventDetails;
        }

        
        public boolean isCallEventDetailsPresent () {
            return this.callEventDetails != null;
        }
        

        public void setCallEventDetails (CallEventDetailList value) {
            this.callEventDetails = value;
        }
        
  
        
        public AuditControlInfo getAuditControlInfo () {
            return this.auditControlInfo;
        }

        
        public boolean isAuditControlInfoPresent () {
            return this.auditControlInfo != null;
        }
        

        public void setAuditControlInfo (AuditControlInfo value) {
            this.auditControlInfo = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_TransferBatchSequenceType;
        }

       private static IASN1PreparedElementData preparedData_TransferBatchSequenceType = CoderFactory.getInstance().newPreparedElementData(TransferBatchSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "TransferBatch", isOptional =  false , hasTag =  true, tag = 1, 
        tagClass =  TagClass.Application  , hasDefaultValue =  false  )
    
        private TransferBatchSequenceType  value;        

        
        
        public TransferBatch () {
        }
        
        
        
        public void setValue(TransferBatchSequenceType value) {
            this.value = value;
        }
        
        
        
        public TransferBatchSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(TransferBatch.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            