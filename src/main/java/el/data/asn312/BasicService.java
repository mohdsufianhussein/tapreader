
package el.data.asn312;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "BasicService" )
    public class BasicService implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "BasicService" , isSet = false )
       public static class BasicServiceSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "serviceCode", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private BasicServiceCode serviceCode = null;
                
  
        @ASN1Element ( name = "transparencyIndicator", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private TransparencyIndicator transparencyIndicator = null;
                
  
        @ASN1Element ( name = "fnur", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private Fnur fnur = null;
                
  
        @ASN1Element ( name = "userProtocolIndicator", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private UserProtocolIndicator userProtocolIndicator = null;
                
  
        @ASN1Element ( name = "guaranteedBitRate", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private GuaranteedBitRate guaranteedBitRate = null;
                
  
        @ASN1Element ( name = "maximumBitRate", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private MaximumBitRate maximumBitRate = null;
                
  
        
        public BasicServiceCode getServiceCode () {
            return this.serviceCode;
        }

        
        public boolean isServiceCodePresent () {
            return this.serviceCode != null;
        }
        

        public void setServiceCode (BasicServiceCode value) {
            this.serviceCode = value;
        }
        
  
        
        public TransparencyIndicator getTransparencyIndicator () {
            return this.transparencyIndicator;
        }

        
        public boolean isTransparencyIndicatorPresent () {
            return this.transparencyIndicator != null;
        }
        

        public void setTransparencyIndicator (TransparencyIndicator value) {
            this.transparencyIndicator = value;
        }
        
  
        
        public Fnur getFnur () {
            return this.fnur;
        }

        
        public boolean isFnurPresent () {
            return this.fnur != null;
        }
        

        public void setFnur (Fnur value) {
            this.fnur = value;
        }
        
  
        
        public UserProtocolIndicator getUserProtocolIndicator () {
            return this.userProtocolIndicator;
        }

        
        public boolean isUserProtocolIndicatorPresent () {
            return this.userProtocolIndicator != null;
        }
        

        public void setUserProtocolIndicator (UserProtocolIndicator value) {
            this.userProtocolIndicator = value;
        }
        
  
        
        public GuaranteedBitRate getGuaranteedBitRate () {
            return this.guaranteedBitRate;
        }

        
        public boolean isGuaranteedBitRatePresent () {
            return this.guaranteedBitRate != null;
        }
        

        public void setGuaranteedBitRate (GuaranteedBitRate value) {
            this.guaranteedBitRate = value;
        }
        
  
        
        public MaximumBitRate getMaximumBitRate () {
            return this.maximumBitRate;
        }

        
        public boolean isMaximumBitRatePresent () {
            return this.maximumBitRate != null;
        }
        

        public void setMaximumBitRate (MaximumBitRate value) {
            this.maximumBitRate = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_BasicServiceSequenceType;
        }

       private static IASN1PreparedElementData preparedData_BasicServiceSequenceType = CoderFactory.getInstance().newPreparedElementData(BasicServiceSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "BasicService", isOptional =  false , hasTag =  true, tag = 36, 
        tagClass =  TagClass.Application  , hasDefaultValue =  false  )
    
        private BasicServiceSequenceType  value;        

        
        
        public BasicService () {
        }
        
        
        
        public void setValue(BasicServiceSequenceType value) {
            this.value = value;
        }
        
        
        
        public BasicServiceSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(BasicService.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            