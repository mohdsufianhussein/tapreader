
package el.data.asn312;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "ScuChargeType" )
    public class ScuChargeType implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "ScuChargeType" , isSet = false )
       public static class ScuChargeTypeSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "messageStatus", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private MessageStatus messageStatus = null;
                
  
        @ASN1Element ( name = "priorityCode", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private PriorityCode priorityCode = null;
                
  
        @ASN1Element ( name = "distanceChargeBandCode", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private DistanceChargeBandCode distanceChargeBandCode = null;
                
  
        @ASN1Element ( name = "messageType", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private MessageType messageType = null;
                
  
        @ASN1Element ( name = "messageDescriptionCode", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private MessageDescriptionCode messageDescriptionCode = null;
                
  
        
        public MessageStatus getMessageStatus () {
            return this.messageStatus;
        }

        
        public boolean isMessageStatusPresent () {
            return this.messageStatus != null;
        }
        

        public void setMessageStatus (MessageStatus value) {
            this.messageStatus = value;
        }
        
  
        
        public PriorityCode getPriorityCode () {
            return this.priorityCode;
        }

        
        public boolean isPriorityCodePresent () {
            return this.priorityCode != null;
        }
        

        public void setPriorityCode (PriorityCode value) {
            this.priorityCode = value;
        }
        
  
        
        public DistanceChargeBandCode getDistanceChargeBandCode () {
            return this.distanceChargeBandCode;
        }

        
        public boolean isDistanceChargeBandCodePresent () {
            return this.distanceChargeBandCode != null;
        }
        

        public void setDistanceChargeBandCode (DistanceChargeBandCode value) {
            this.distanceChargeBandCode = value;
        }
        
  
        
        public MessageType getMessageType () {
            return this.messageType;
        }

        
        public boolean isMessageTypePresent () {
            return this.messageType != null;
        }
        

        public void setMessageType (MessageType value) {
            this.messageType = value;
        }
        
  
        
        public MessageDescriptionCode getMessageDescriptionCode () {
            return this.messageDescriptionCode;
        }

        
        public boolean isMessageDescriptionCodePresent () {
            return this.messageDescriptionCode != null;
        }
        

        public void setMessageDescriptionCode (MessageDescriptionCode value) {
            this.messageDescriptionCode = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_ScuChargeTypeSequenceType;
        }

       private static IASN1PreparedElementData preparedData_ScuChargeTypeSequenceType = CoderFactory.getInstance().newPreparedElementData(ScuChargeTypeSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "ScuChargeType", isOptional =  false , hasTag =  true, tag = 192, 
        tagClass =  TagClass.Application  , hasDefaultValue =  false  )
    
        private ScuChargeTypeSequenceType  value;        

        
        
        public ScuChargeType () {
        }
        
        
        
        public void setValue(ScuChargeTypeSequenceType value) {
            this.value = value;
        }
        
        
        
        public ScuChargeTypeSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ScuChargeType.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            