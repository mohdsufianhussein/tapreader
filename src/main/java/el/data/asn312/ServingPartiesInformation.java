
package el.data.asn312;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "ServingPartiesInformation" )
    public class ServingPartiesInformation implements IASN1PreparedElement {
                
        

       @ASN1PreparedElement
       @ASN1Sequence ( name = "ServingPartiesInformation" , isSet = false )
       public static class ServingPartiesInformationSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "contentProviderName", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ContentProviderName contentProviderName = null;
                
  
        @ASN1Element ( name = "contentProviderIdList", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private ContentProviderIdList contentProviderIdList = null;
                
  
        @ASN1Element ( name = "internetServiceProviderIdList", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private InternetServiceProviderIdList internetServiceProviderIdList = null;
                
  
        @ASN1Element ( name = "networkList", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private NetworkList networkList = null;
                
  
        
        public ContentProviderName getContentProviderName () {
            return this.contentProviderName;
        }

        
        public boolean isContentProviderNamePresent () {
            return this.contentProviderName != null;
        }
        

        public void setContentProviderName (ContentProviderName value) {
            this.contentProviderName = value;
        }
        
  
        
        public ContentProviderIdList getContentProviderIdList () {
            return this.contentProviderIdList;
        }

        
        public boolean isContentProviderIdListPresent () {
            return this.contentProviderIdList != null;
        }
        

        public void setContentProviderIdList (ContentProviderIdList value) {
            this.contentProviderIdList = value;
        }
        
  
        
        public InternetServiceProviderIdList getInternetServiceProviderIdList () {
            return this.internetServiceProviderIdList;
        }

        
        public boolean isInternetServiceProviderIdListPresent () {
            return this.internetServiceProviderIdList != null;
        }
        

        public void setInternetServiceProviderIdList (InternetServiceProviderIdList value) {
            this.internetServiceProviderIdList = value;
        }
        
  
        
        public NetworkList getNetworkList () {
            return this.networkList;
        }

        
        public boolean isNetworkListPresent () {
            return this.networkList != null;
        }
        

        public void setNetworkList (NetworkList value) {
            this.networkList = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_ServingPartiesInformationSequenceType;
        }

       private static IASN1PreparedElementData preparedData_ServingPartiesInformationSequenceType = CoderFactory.getInstance().newPreparedElementData(ServingPartiesInformationSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "ServingPartiesInformation", isOptional =  false , hasTag =  true, tag = 335, 
        tagClass =  TagClass.Application  , hasDefaultValue =  false  )
    
        private ServingPartiesInformationSequenceType  value;        

        
        
        public ServingPartiesInformation () {
        }
        
        
        
        public void setValue(ServingPartiesInformationSequenceType value) {
            this.value = value;
        }
        
        
        
        public ServingPartiesInformationSequenceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ServingPartiesInformation.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            