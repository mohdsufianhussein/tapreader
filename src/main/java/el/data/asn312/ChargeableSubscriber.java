
package el.data.asn312;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1BoxedType ( name = "ChargeableSubscriber" )
    public class ChargeableSubscriber implements IASN1PreparedElement {
                
        
        
    @ASN1PreparedElement
    @ASN1Choice ( name = "ChargeableSubscriber" )
    public static class ChargeableSubscriberChoiceType implements IASN1PreparedElement {
            
        @ASN1Element ( name = "simChargeableSubscriber", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private SimChargeableSubscriber simChargeableSubscriber = null;
                
  
        @ASN1Element ( name = "minChargeableSubscriber", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private MinChargeableSubscriber minChargeableSubscriber = null;
                
  
        
        public SimChargeableSubscriber getSimChargeableSubscriber () {
            return this.simChargeableSubscriber;
        }

        public boolean isSimChargeableSubscriberSelected () {
            return this.simChargeableSubscriber != null;
        }

        private void setSimChargeableSubscriber (SimChargeableSubscriber value) {
            this.simChargeableSubscriber = value;
        }

        
        public void selectSimChargeableSubscriber (SimChargeableSubscriber value) {
            this.simChargeableSubscriber = value;
            
                    setMinChargeableSubscriber(null);
                            
        }

        
  
        
        public MinChargeableSubscriber getMinChargeableSubscriber () {
            return this.minChargeableSubscriber;
        }

        public boolean isMinChargeableSubscriberSelected () {
            return this.minChargeableSubscriber != null;
        }

        private void setMinChargeableSubscriber (MinChargeableSubscriber value) {
            this.minChargeableSubscriber = value;
        }

        
        public void selectMinChargeableSubscriber (MinChargeableSubscriber value) {
            this.minChargeableSubscriber = value;
            
                    setSimChargeableSubscriber(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_ChargeableSubscriberChoiceType;
        }

        private static IASN1PreparedElementData preparedData_ChargeableSubscriberChoiceType = CoderFactory.getInstance().newPreparedElementData(ChargeableSubscriberChoiceType.class);

    }

                
        @ASN1Element ( name = "ChargeableSubscriber", isOptional =  false , hasTag =  true, tag = 427, 
        tagClass =  TagClass.Application  , hasDefaultValue =  false  )
    
        private ChargeableSubscriberChoiceType  value;        

        
        
        public ChargeableSubscriber () {
        }
        
        
        
        public void setValue(ChargeableSubscriberChoiceType value) {
            this.value = value;
        }
        
        
        
        public ChargeableSubscriberChoiceType getValue() {
            return this.value;
        }            
        

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(ChargeableSubscriber.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            